# Etapa de construção
FROM node:18-alpine as build

WORKDIR /app

# Copia os arquivos para o container
COPY ./propmanage/ ./

# Instala as dependências
RUN npm install

# Gera os arquivos finais da aplicação
RUN npm run build

# Configuração do servidor
FROM nginx:alpine

# Remove arquivos desnecessários
RUN rm -rf /usr/share/nginx/html/*

# Move os arquivos finais para o local correto
COPY --from=build /app/dist/*/browser/ /usr/share/nginx/html/

# Define ajustes de funcionamento
RUN echo 'server { \
    listen 80; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    location / { \
        try_files $uri $uri/ /index.html; \
    } \
    \
    location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ { \
        expires 1y; \
        add_header Cache-Control "public, max-age=31536000"; \
    } \
}' > /etc/nginx/conf.d/default.conf

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"]